From b8d54bc2881978236786cdba84e26d54f4ba828c Mon Sep 17 00:00:00 2001
From: sajcho <saux.aarch64@gmail.com>
Date: Fri, 16 Dec 2022 15:27:24 +0100
Subject: [PATCH] libexec path

---
 src/bootstrap/dist.rs | 4 ++--
 src/bootstrap/tool.rs | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/bootstrap/dist.rs b/src/bootstrap/dist.rs
index 12585e80e6b..eb596be98dc 100644
--- a/src/bootstrap/dist.rs
+++ b/src/bootstrap/dist.rs
@@ -394,7 +394,7 @@ fn prepare_image(builder: &Builder<'_>, compiler: Compiler, image: &Path) {
                     target: compiler.host,
                 })
                 .expect("rust-analyzer-proc-macro-server always builds");
-            builder.install(&ra_proc_macro_srv, &image.join("libexec"), 0o755);
+            builder.install(&ra_proc_macro_srv, &image.join("lib"), 0o755);
 
             let libdir_relative = builder.libdir_relative(compiler);
 
@@ -1003,7 +1003,7 @@ fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {
         for dirent in fs::read_dir(cargo.parent().unwrap()).expect("read_dir") {
             let dirent = dirent.expect("read dir entry");
             if dirent.file_name().to_str().expect("utf8").starts_with("cargo-credential-") {
-                tarball.add_file(&dirent.path(), "libexec", 0o755);
+                tarball.add_file(&dirent.path(), "lib", 0o755);
             }
         }
 
diff --git a/src/bootstrap/tool.rs b/src/bootstrap/tool.rs
index eec74b2675a..efb491ace91 100644
--- a/src/bootstrap/tool.rs
+++ b/src/bootstrap/tool.rs
@@ -779,11 +779,11 @@ fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {
             source_type: SourceType::InTree,
         })?;
 
-        // Copy `rust-analyzer-proc-macro-srv` to `<sysroot>/libexec/`
+        // Copy `rust-analyzer-proc-macro-srv` to `<sysroot>/lib/`
         // so that r-a can use it.
-        let libexec_path = builder.sysroot(self.compiler).join("libexec");
-        t!(fs::create_dir_all(&libexec_path));
-        builder.copy(&path, &libexec_path.join("rust-analyzer-proc-macro-srv"));
+        let lib_path = builder.sysroot(self.compiler).join("lib");
+        t!(fs::create_dir_all(&lib_path));
+        builder.copy(&path, &lib_path.join("rust-analyzer-proc-macro-srv"));
 
         Some(path)
     }
-- 
2.39.0

From 115ceea68bfa4a621039b217903c1120b13ef65f Mon Sep 17 00:00:00 2001
From: sajcho <saux.aarch64@gmail.com>
Date: Fri, 16 Dec 2022 15:30:38 +0100
Subject: [PATCH] libexec path

---
 src/tools/rust-analyzer/crates/project-model/src/tests.rs       | 2 +-
 .../rust-analyzer/crates/rust-analyzer/src/cli/load_cargo.rs    | 2 +-
 src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs      | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/tools/rust-analyzer/crates/project-model/src/tests.rs b/src/tools/rust-analyzer/crates/project-model/src/tests.rs
index e2444e24974..fda153a8ee1 100644
--- a/src/tools/rust-analyzer/crates/project-model/src/tests.rs
+++ b/src/tools/rust-analyzer/crates/project-model/src/tests.rs
@@ -76,7 +76,7 @@ fn get_test_path(file: &str) -> PathBuf {
 
 fn get_fake_sysroot() -> Sysroot {
     let sysroot_path = get_test_path("fake-sysroot");
-    // there's no `libexec/` directory with a `proc-macro-srv` binary in that
+    // there's no `lib/` directory with a `proc-macro-srv` binary in that
     // fake sysroot, so we give them both the same path:
     let sysroot_dir = AbsPathBuf::assert(sysroot_path);
     let sysroot_src_dir = sysroot_dir.clone();
diff --git a/src/tools/rust-analyzer/crates/rust-analyzer/src/cli/load_cargo.rs b/src/tools/rust-analyzer/crates/rust-analyzer/src/cli/load_cargo.rs
index 5dba545b871..befaeb9e70d 100644
--- a/src/tools/rust-analyzer/crates/rust-analyzer/src/cli/load_cargo.rs
+++ b/src/tools/rust-analyzer/crates/rust-analyzer/src/cli/load_cargo.rs
@@ -69,7 +69,7 @@ pub fn load_workspace(
             if let Some(sysroot) = sysroot.as_ref() {
                 let standalone_server_name =
                     format!("rust-analyzer-proc-macro-srv{}", std::env::consts::EXE_SUFFIX);
-                let server_path = sysroot.root().join("libexec").join(&standalone_server_name);
+                let server_path = sysroot.root().join("lib").join(&standalone_server_name);
                 if std::fs::metadata(&server_path).is_ok() {
                     path = server_path;
                     args = vec![];
diff --git a/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs b/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
index e1f651786de..b026dbbf4ef 100644
--- a/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
+++ b/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
@@ -324,7 +324,7 @@ fn eq_ignore_build_data<'a>(
                                 if let Some(sysroot) = sysroot.as_ref() {
                                     let server_path = sysroot
                                         .root()
-                                        .join("libexec")
+                                        .join("lib")
                                         .join(&standalone_server_name);
                                     if std::fs::metadata(&server_path).is_ok() {
                                         tracing::debug!(
-- 
2.39.0

From 52b3f464773092c50d718e1b7c5f6f6777fc8415 Mon Sep 17 00:00:00 2001
From: sajcho <saux.aarch64@gmail.com>
Date: Fri, 16 Dec 2022 15:33:12 +0100
Subject: [PATCH] libexec path

---
 src/tools/rust-analyzer/crates/project-model/src/sysroot.rs | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs b/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
index fa8d76f3f45..3d68aa9515d 100644
--- a/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
+++ b/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
@@ -37,7 +37,7 @@ fn index(&self, index: SysrootCrate) -> &SysrootCrateData {
 }
 
 impl Sysroot {
-    /// Returns sysroot "root" directory, where `bin/`, `etc/`, `lib/`, `libexec/`
+    /// Returns sysroot "root" directory, where `bin/`, `etc/`, `lib/`
     /// subfolder live, like:
     /// `$HOME/.rustup/toolchains/nightly-2022-07-23-x86_64-unknown-linux-gnu`
     pub fn root(&self) -> &AbsPath {
-- 
2.39.0

