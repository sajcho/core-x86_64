From f6381c19de566466ef8dcf8b3b19df594c22522a Mon Sep 17 00:00:00 2001
From: sajcho <saux.aarch64@gmail.com>
Date: Sat, 19 Nov 2022 15:05:16 +0100
Subject: [PATCH] Modified for SAUX-x86_64 system.

---
 pkgadd.conf |  7 +++----
 pkgmk.conf  | 27 ++++++++++++++++-----------
 pkgmk.in    | 16 +++++++++-------
 pkgutil.cc  | 33 +++++++++++++++++----------------
 4 files changed, 45 insertions(+), 38 deletions(-)

diff --git a/pkgadd.conf b/pkgadd.conf
index 4ac0cb93..89a5a1f7 100644
--- a/pkgadd.conf
+++ b/pkgadd.conf
@@ -13,12 +13,11 @@ UPGRADE		^var/run/utmp$		NO
 UPGRADE		^etc/ports/drivers/.*$	YES
 UPGRADE		^etc/X11/.*$		YES
 
-UPGRADE		^etc/rc.*$		YES
+UPGRADE		^etc/runit/.*$		NO
+UPGRADE		^etc/sv/.*$		NO
 UPGRADE		^etc/rc\.local$		NO
-UPGRADE		^etc/rc\.modules$	NO
+UPGRADE		^etc/rc\.shutdown$	NO
 UPGRADE		^etc/rc\.conf$		NO
-UPGRADE		^etc/rc\.d/net$		NO
-UPGRADE		^etc/rc\.d/wlan$	NO
 
 UPGRADE		^etc/udev/rules.d/.*$	YES
 UPGRADE		^etc/udev/rules.d/1.*$	NO
diff --git a/pkgmk.conf b/pkgmk.conf
index e6a8abc8..afcb7467 100644
--- a/pkgmk.conf
+++ b/pkgmk.conf
@@ -2,20 +2,20 @@
 # /etc/pkgmk.conf: pkgmk(8) configuration
 #
 
-export CFLAGS="-O2 -march=x86-64 -pipe"
-export CXXFLAGS="${CFLAGS}"
+export CARCH="x86_64"
+export CHOST="x86_64-unknown-linux-gnu"
 
-# export JOBS=$(nproc)
-# export MAKEFLAGS="-j $JOBS"
+CFLAGS="-O2 -m64 -march=x86-64 -mtune=generic -Wno-psabi"
+CXXFLAGS="-O2 -m64 -march=x86-64 -mtune=generic -Wno-psabi"
 
 case ${PKGMK_ARCH} in
-	"64"|"")
+	"x86_64")
+		export CFLAGS="${CFLAGS}"
+		export CXXFLAGS="${CXXFLAGS}"
 		;;
-	"32")
-		export CFLAGS="${CFLAGS} -m32"
-		export CXXFLAGS="${CXXFLAGS} -m32"
-		export LDFLAGS="${LDFLAGS} -m32"
-		export PKG_CONFIG_LIBDIR="/usr/lib32/pkgconfig"
+	"aarch64")
+		export CFLAGS="${CFLAGS}"
+		export CXXFLAGS="${CXXFLAGS}"
 		;;
 	*)
 		echo "Unknown architecture selected! Exiting."
@@ -23,6 +23,11 @@ case ${PKGMK_ARCH} in
 		;;
 esac
 
+# export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
+# export JOBS=$(nproc)
+# export MAKEFLAGS="-j $JOBS"
+# export SAMUFLAGS="-j $JOBS"
+
 # PKGMK_SOURCE_MIRRORS=()
 # PKGMK_SOURCE_DIR="$PWD"
 # PKGMK_PACKAGE_DIR="$PWD"
@@ -33,7 +38,7 @@ esac
 # PKGMK_IGNORE_FOOTPRINT="no"
 # PKGMK_IGNORE_NEW="no"
 # PKGMK_NO_STRIP="no"
-# PKGMK_DOWNLOAD_PROG="curl"
+# PKGMK_DOWNLOAD_PROG="wget"
 # PKGMK_WGET_OPTS=""
 # PKGMK_CURL_OPTS=""
 # PKGMK_COMPRESSION_MODE="gz"
diff --git a/pkgmk.in b/pkgmk.in
index 9bf381d7..a21d656e 100644
--- a/pkgmk.in
+++ b/pkgmk.in
@@ -208,7 +208,7 @@ unpack_source() {
 		RENAME="${renames[$srcind]}"
 		[ -n "$RENAME" -a "$RENAME" != "SKIP" ] && LOCAL_FILE="$PKGMK_SOURCE_DIR/$RENAME"
 		case $LOCAL_FILE in
-			*.tar|*.tar.gz|*.tar.Z|*.tgz|*.tar.bz2|*.tbz2|*.tar.xz|*.txz|*.tar.lzma|*.tar.lz|*.zip|*.rpm|*.7z)
+			*.tar|*.tar.gz|*.tar.Z|*.tgz|*.tar.bz2|*.tbz2|*.tar.xz|*.txz|*.tar.lzma|*.tar.lz|*.zip|*.rpm|*.7z|*.zst)
 				COMMAND="bsdtar -p -o -C $SRC -xf $LOCAL_FILE" ;;
 			*)
 				COMMAND="cp $LOCAL_FILE $SRC" ;;
@@ -591,6 +591,7 @@ build_package() {
 			bz2) COMPRESSION="-j" ;;
 			xz)  COMPRESSION="-J" ;;
 			lz)  COMPRESSION="--lzip" ;;
+			zst) COMPRESSION="--zstd" ;;
 		esac
 		bsdtar --format=gnutar -c $COMPRESSION -f $TARGET *  &&  bsdtar -t -v -f $TARGET
 
@@ -849,10 +850,11 @@ parse_options() {
 }
 
 main() {
-	# multilib
-	PKGMK_ARCH=64
-	if [ -f ".32bit" ]; then
-		PKGMK_ARCH=32
+	# multiarch
+	if [ -x "/bin/uname" ] && [ `uname -m` = "x86_64" ]; then
+		PKGMK_ARCH="x86_64"
+	elif [ -x "/bin/uname" ] && [ `uname -m` = "aarch64" ]; then
+		PKGMK_ARCH="aarch64"
 	fi
 
 	local FILE TARGET
@@ -879,8 +881,8 @@ main() {
 	check_pkgfile
 
 	case $PKGMK_COMPRESSION_MODE in
-		gz|bz2|xz|lz)
-			TARGET="$PKGMK_PACKAGE_DIR/$name#$version-$release.pkg.tar.$PKGMK_COMPRESSION_MODE"
+		gz|bz2|xz|lz|zst)
+			TARGET="$PKGMK_PACKAGE_DIR/$name#$version-$release.$PKGMK_ARCH.pkg.tar.$PKGMK_COMPRESSION_MODE"
 			;;
 		*)
 			error "Compression mode '$PKGMK_COMPRESSION_MODE' not supported"
diff --git a/pkgutil.cc b/pkgutil.cc
index bf1a0aa6..4e67e77a 100644
--- a/pkgutil.cc
+++ b/pkgutil.cc
@@ -1,9 +1,9 @@
 //
 //  pkgutils
-// 
+//
 //  Copyright (c) 2000-2005 Per Liden
 //  Copyright (c) 2006-2021 by CRUX team (http://crux.nu)
-// 
+//
 //  This program is free software; you can redistribute it and/or modify
 //  it under the terms of the GNU General Public License as published by
 //  the Free Software Foundation; either version 2 of the License, or
@@ -16,7 +16,7 @@
 //
 //  You should have received a copy of the GNU General Public License
 //  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
 //  USA.
 //
 
@@ -48,6 +48,7 @@
 	archive_read_support_filter_bzip2((ar)); \
 	archive_read_support_filter_xz((ar)); \
 	archive_read_support_filter_lzip((ar)); \
+	archive_read_support_filter_zstd((ar)); \
 	archive_read_support_format_tar((ar))
 
 #define DEFAULT_BYTES_PER_BLOCK (20 * 512)
@@ -91,10 +92,10 @@ void pkgutil::db_open(const string& path)
 		for (;;) {
 			string file;
 			getline(in, file);
-         
+
 			if (file.empty())
 				break; // End of record
-         
+
 			info.files.insert(info.files.end(), file);
 		}
 		if (!info.files.empty())
@@ -144,7 +145,7 @@ void pkgutil::db_commit()
 
 	// Relink database backup
 	if (unlink(dbfilename_bak.c_str()) == -1 && errno != ENOENT)
-		throw runtime_error_with_errno("could not remove " + dbfilename_bak);	
+		throw runtime_error_with_errno("could not remove " + dbfilename_bak);
 	if (link(dbfilename.c_str(), dbfilename_bak.c_str()) == -1)
 		throw runtime_error_with_errno("could not create " + dbfilename_bak);
 
@@ -249,7 +250,7 @@ void pkgutil::db_rm_files(set<string> files, const set<string>& keep_list)
 	for (packages_t::iterator i = packages.begin(); i != packages.end(); ++i)
 		for (set<string>::const_iterator j = files.begin(); j != files.end(); ++j)
 			i->second.files.erase(*j);
-   
+
 #ifndef NDEBUG
 	cerr << "Removing files:" << endl;
 	copy(files.begin(), files.end(), ostream_iterator<string>(cerr, "\n"));
@@ -275,7 +276,7 @@ void pkgutil::db_rm_files(set<string> files, const set<string>& keep_list)
 set<string> pkgutil::db_find_conflicts(const string& name, const pkginfo_t& info)
 {
 	set<string> files;
-   
+
 	// Find conflicting files in database
 	for (packages_t::const_iterator i = packages.begin(); i != packages.end(); ++i) {
 		if (i->first != name) {
@@ -284,7 +285,7 @@ set<string> pkgutil::db_find_conflicts(const string& name, const pkginfo_t& info
 					 inserter(files, files.end()));
 		}
 	}
-	
+
 #ifndef NDEBUG
 	cerr << "Conflicts phase 1 (conflicts in database):" << endl;
 	copy(files.begin(), files.end(), ostream_iterator<string>(cerr, "\n"));
@@ -344,7 +345,7 @@ pair<string, pkgutil::pkginfo_t> pkgutil::pkg_open(const string& filename) const
 	string name(basename, 0, basename.find(VERSION_DELIM));
 	string version(basename, 0, basename.rfind(PKG_EXT));
 	version.erase(0, version.find(VERSION_DELIM) == string::npos ? string::npos : version.find(VERSION_DELIM) + 1);
-   
+
 	if (name.empty() || version.empty())
 		throw runtime_error("could not determine name and/or version of " + basename + ": Invalid package name");
 
@@ -371,7 +372,7 @@ pair<string, pkgutil::pkginfo_t> pkgutil::pkg_open(const string& filename) const
 		    archive_read_data_skip(archive) != ARCHIVE_OK)
 			throw runtime_error_with_errno("could not read " + filename, archive_errno(archive));
 	}
-   
+
 	if (i == 0) {
 		if (archive_errno(archive) == 0)
 			throw runtime_error("empty package");
@@ -604,11 +605,11 @@ void pkgutil::pkg_footprint(string& filename) const
 		}
 
 		cout << '\n';
-		
+
 		if (S_ISREG(mode) && archive_read_data_skip(archive))
 			throw runtime_error_with_errno("could not read " + filename, archive_errno(archive));
 	}
-   
+
 	if (i == 0) {
 		if (archive_errno(archive) == 0)
 			throw runtime_error("empty package");
@@ -733,7 +734,7 @@ bool file_empty(const string& filename)
 
 	if (lstat(filename.c_str(), &buf) == -1)
 		return false;
-	
+
 	return (S_ISREG(buf.st_mode) && buf.st_size == 0);
 }
 
@@ -751,7 +752,7 @@ bool file_equal(const string& file1, const string& file2)
 	if (S_ISREG(buf1.st_mode) && S_ISREG(buf2.st_mode)) {
 		ifstream f1(file1.c_str());
 		ifstream f2(file2.c_str());
-	
+
 		if (!f1 || !f2)
 			return false;
 
@@ -806,7 +807,7 @@ bool permissions_equal(const string& file1, const string& file2)
 
 	if (lstat(file2.c_str(), &buf2) == -1)
 		return false;
-	
+
 	return(buf1.st_mode == buf2.st_mode) &&
 		(buf1.st_uid == buf2.st_uid) &&
 		(buf1.st_gid == buf2.st_gid);
-- 
2.38.1

